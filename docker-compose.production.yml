version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: docmost-nginx
    ports:
      - "80:80"
      - "443:443"  # برای HTTPS در آینده
    volumes:
      - ./nginx/nginx-docker.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro  # برای SSL certificates
      - nginx_logs:/var/log/nginx
      - static_files:/usr/share/nginx/html/static:ro  # فایل‌های استاتیک
    depends_on:
      - docmost
    restart: unless-stopped
    networks:
      - docmost-network

  # Docmost Application
  docmost:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: docmost-app
    depends_on:
      - db
      - redis
    environment:
      APP_URL: 'http://localhost'  # دامنه سرور خود را اینجا قرار دهید
      APP_SECRET: '${APP_SECRET}'
      DATABASE_URL: 'postgresql://docmost:${DB_PASSWORD}@db:5432/docmost?schema=public'
      REDIS_URL: 'redis://redis:6379'
      NODE_ENV: 'production'
      # تنظیمات اضافی
      FILE_UPLOAD_SIZE_LIMIT: '52428800'  # 50MB
      FILE_IMPORT_SIZE_LIMIT: '52428800'  # 50MB
      DRAWIO_URL: 'https://embed.diagrams.net'
    volumes:
      - app_storage:/app/data/storage
      - static_files:/app/apps/client/dist  # به اشتراک‌گذاری فایل‌های استاتیک با nginx
    restart: unless-stopped
    networks:
      - docmost-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: docmost-db
    environment:
      POSTGRES_DB: docmost
      POSTGRES_USER: docmost
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backups:/backups  # برای backup های دیتابیس
    restart: unless-stopped
    networks:
      - docmost-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docmost -d docmost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: docmost-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - docmost-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Log Management (اختیاری)
  logrotate:
    image: linkyard/docker-helm
    container_name: docmost-logrotate
    volumes:
      - nginx_logs:/logs/nginx
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    environment:
      - LOGROTATE_CONF=/etc/logrotate.d/nginx
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  docmost-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  app_storage:
    driver: local
  db_data:
    driver: local  
  redis_data:
    driver: local
  static_files:
    driver: local
  nginx_logs:
    driver: local 